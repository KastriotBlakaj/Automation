# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Serenity Automation CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxss1 \
            libappindicator3-1 \
            libindicator7 \
            fonts-liberation \
            libatk-bridge2.0-0 \
            libgtk-3-0 \
            xdg-utils \
            libnss3 \
            libx11-xcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxrandr2 \
            libxi6 \
            libxtst6 \
            libxss1 \
            libxshmfence1 \
            libgbm-dev \
            libasound2

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven Packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Debug and Run Serenity Tests
        env:
          WEBDRIVER_CHROME_LOG_LEVEL: ALL
        run: |
          echo "Chrome version:"
          google-chrome --version
          echo "Testing if Chrome starts..."
          google-chrome --headless --no-sandbox --disable-dev-shm-usage --remote-debugging-port=9222 http://example.com || echo "Chrome failed to start"
      
          echo "Running Serenity Tests..."
          mvn test -Dwebdriver.chrome.args="--headless --no-sandbox --disable-dev-shm-usage --remote-allow-origins=*"

      - name: Publish Serenity Reports
        if: success()
        run: |
          mkdir -p serenity-report
          cp -r target/site/serenity/* serenity-report/

      - name: Upload Serenity Reports as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: serenity-report
          path: serenity-report

      - name: Upload Chrome Logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: chrome-logs
          path: chrome.log

      - name: Notify CI/CD Success
        if: success()
        run: echo "CI/CD Pipeline completed successfully."

      - name: Notify CI/CD Failure
        if: failure()
        run: echo "CI/CD Pipeline failed."
